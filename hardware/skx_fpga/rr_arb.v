// system_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl. If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2015.06.26.18:29:38

`timescale 1 ps / 1 ps
module rr_arb (
		input wire clk,  
		input wire reset, 
		input wire [63:0] avmm_r_address, 
		output wire avmm_r_waitrequest, 
		input wire [0:0] avmm_r_burstcount, 
		input wire avmm_r_read, 
		output wire [511:0] avmm_r_readdata, 
		output wire avmm_r_readdatavalid, 
 
		input wire [63:0] avmm_w_address, 
		output wire avmm_w_waitrequest, 
		input wire [0:0] avmm_w_burstcount, 
		input wire [63:0] avmm_w_byteenable, 
		input wire avmm_w_write, 
		input wire [511:0] avmm_w_writedata, 
		output wire [63:0] qpi_slave_address,  
		output wire qpi_slave_write,  
		output wire qpi_slave_read,  
		input wire [511:0]qpi_slave_readdata,  
		output wire [511:0]qpi_slave_writedata,  
		output wire [63:0] qpi_slave_byteenable,  
		input wire qpi_slave_readdatavalid,  
		input wire qpi_slave_waitrequest 
	);

	
    reg grant_r;

    
    wire read_only = avmm_r_read && !avmm_w_write;
    wire write_only = !avmm_r_read && avmm_w_write;
    wire no_request = !avmm_r_read && !avmm_w_write;
    always@(posedge clk or posedge reset)
    begin
    if(reset)
      begin
        grant_r <= 0;
      end
      else
      begin
        grant_r <= no_request || qpi_slave_waitrequest? grant_r : grant_r ?  read_only | 1'b0 :  1'b1 && !write_only; //only maintain grant while the current one is valid and other is not
      end
    end 

    assign avmm_r_waitrequest = no_request ? 1'b0 : ~grant_r | qpi_slave_waitrequest; 

    assign avmm_r_readdata = qpi_slave_readdata;

    assign avmm_r_readdatavalid = qpi_slave_readdatavalid;

    assign avmm_w_waitrequest = no_request ? 1'b0 : grant_r | qpi_slave_waitrequest; 



    assign qpi_slave_address = grant_r ? avmm_r_address : avmm_w_address;
    assign qpi_slave_write = !grant_r && avmm_w_write;
    assign qpi_slave_read = grant_r && avmm_r_read;

    assign  qpi_slave_writedata = avmm_w_writedata;  
    assign  qpi_slave_byteenable = grant_r ? {64{1'b1}} : avmm_w_byteenable;
		  


 
endmodule
