	board u0 (
		.avmm_r_slave_waitrequest   (<connected-to-avmm_r_slave_waitrequest>),   //  avmm_r_slave.waitrequest
		.avmm_r_slave_readdata      (<connected-to-avmm_r_slave_readdata>),      //              .readdata
		.avmm_r_slave_readdatavalid (<connected-to-avmm_r_slave_readdatavalid>), //              .readdatavalid
		.avmm_r_slave_burstcount    (<connected-to-avmm_r_slave_burstcount>),    //              .burstcount
		.avmm_r_slave_writedata     (<connected-to-avmm_r_slave_writedata>),     //              .writedata
		.avmm_r_slave_address       (<connected-to-avmm_r_slave_address>),       //              .address
		.avmm_r_slave_write         (<connected-to-avmm_r_slave_write>),         //              .write
		.avmm_r_slave_read          (<connected-to-avmm_r_slave_read>),          //              .read
		.avmm_r_slave_byteenable    (<connected-to-avmm_r_slave_byteenable>),    //              .byteenable
		.avmm_r_slave_debugaccess   (<connected-to-avmm_r_slave_debugaccess>),   //              .debugaccess
		.avmm_w_slave_waitrequest   (<connected-to-avmm_w_slave_waitrequest>),   //  avmm_w_slave.waitrequest
		.avmm_w_slave_readdata      (<connected-to-avmm_w_slave_readdata>),      //              .readdata
		.avmm_w_slave_readdatavalid (<connected-to-avmm_w_slave_readdatavalid>), //              .readdatavalid
		.avmm_w_slave_burstcount    (<connected-to-avmm_w_slave_burstcount>),    //              .burstcount
		.avmm_w_slave_writedata     (<connected-to-avmm_w_slave_writedata>),     //              .writedata
		.avmm_w_slave_address       (<connected-to-avmm_w_slave_address>),       //              .address
		.avmm_w_slave_write         (<connected-to-avmm_w_slave_write>),         //              .write
		.avmm_w_slave_read          (<connected-to-avmm_w_slave_read>),          //              .read
		.avmm_w_slave_byteenable    (<connected-to-avmm_w_slave_byteenable>),    //              .byteenable
		.avmm_w_slave_debugaccess   (<connected-to-avmm_w_slave_debugaccess>),   //              .debugaccess
		.bridge_reset_reset         (<connected-to-bridge_reset_reset>),         //  bridge_reset.reset
		.ci0_InitDone               (<connected-to-ci0_InitDone>),               //           ci0.InitDone
		.ci0_virtual_access         (<connected-to-ci0_virtual_access>),         //              .virtual_access
		.ci0_tx_c0_almostfull       (<connected-to-ci0_tx_c0_almostfull>),       //              .tx_c0_almostfull
		.ci0_rx_c0_header           (<connected-to-ci0_rx_c0_header>),           //              .rx_c0_header
		.ci0_rx_c0_data             (<connected-to-ci0_rx_c0_data>),             //              .rx_c0_data
		.ci0_rx_c0_wrvalid          (<connected-to-ci0_rx_c0_wrvalid>),          //              .rx_c0_wrvalid
		.ci0_rx_c0_rdvalid          (<connected-to-ci0_rx_c0_rdvalid>),          //              .rx_c0_rdvalid
		.ci0_rx_c0_ugvalid          (<connected-to-ci0_rx_c0_ugvalid>),          //              .rx_c0_ugvalid
		.ci0_rx_c0_mmiordvalid      (<connected-to-ci0_rx_c0_mmiordvalid>),      //              .rx_c0_mmiordvalid
		.ci0_rx_c0_mmiowrvalid      (<connected-to-ci0_rx_c0_mmiowrvalid>),      //              .rx_c0_mmiowrvalid
		.ci0_tx_c1_almostfull       (<connected-to-ci0_tx_c1_almostfull>),       //              .tx_c1_almostfull
		.ci0_rx_c1_header           (<connected-to-ci0_rx_c1_header>),           //              .rx_c1_header
		.ci0_rx_c1_wrvalid          (<connected-to-ci0_rx_c1_wrvalid>),          //              .rx_c1_wrvalid
		.ci0_rx_c1_irvalid          (<connected-to-ci0_rx_c1_irvalid>),          //              .rx_c1_irvalid
		.ci0_tx_c0_header           (<connected-to-ci0_tx_c0_header>),           //              .tx_c0_header
		.ci0_tx_c0_rdvalid          (<connected-to-ci0_tx_c0_rdvalid>),          //              .tx_c0_rdvalid
		.ci0_tx_c1_header           (<connected-to-ci0_tx_c1_header>),           //              .tx_c1_header
		.ci0_tx_c1_data             (<connected-to-ci0_tx_c1_data>),             //              .tx_c1_data
		.ci0_tx_c1_wrvalid          (<connected-to-ci0_tx_c1_wrvalid>),          //              .tx_c1_wrvalid
		.ci0_tx_c1_irvalid          (<connected-to-ci0_tx_c1_irvalid>),          //              .tx_c1_irvalid
		.ci0_tx_c1_byteen           (<connected-to-ci0_tx_c1_byteen>),           //              .tx_c1_byteen
		.ci0_tx_c2_header           (<connected-to-ci0_tx_c2_header>),           //              .tx_c2_header
		.ci0_tx_c2_rdvalid          (<connected-to-ci0_tx_c2_rdvalid>),          //              .tx_c2_rdvalid
		.ci0_tx_c2_data             (<connected-to-ci0_tx_c2_data>),             //              .tx_c2_data
		.ci0_nohazards_rd           (<connected-to-ci0_nohazards_rd>),           //              .nohazards_rd
		.ci0_nohazards_wr_full      (<connected-to-ci0_nohazards_wr_full>),      //              .nohazards_wr_full
		.ci0_nohazards_wr_all       (<connected-to-ci0_nohazards_wr_all>),       //              .nohazards_wr_all
		.clk_400_clk                (<connected-to-clk_400_clk>),                //       clk_400.clk
		.global_reset_reset_n       (<connected-to-global_reset_reset_n>),       //  global_reset.reset_n
		.kernel_clk_clk             (<connected-to-kernel_clk_clk>),             //    kernel_clk.clk
		.kernel_cra_waitrequest     (<connected-to-kernel_cra_waitrequest>),     //    kernel_cra.waitrequest
		.kernel_cra_readdata        (<connected-to-kernel_cra_readdata>),        //              .readdata
		.kernel_cra_readdatavalid   (<connected-to-kernel_cra_readdatavalid>),   //              .readdatavalid
		.kernel_cra_burstcount      (<connected-to-kernel_cra_burstcount>),      //              .burstcount
		.kernel_cra_writedata       (<connected-to-kernel_cra_writedata>),       //              .writedata
		.kernel_cra_address         (<connected-to-kernel_cra_address>),         //              .address
		.kernel_cra_write           (<connected-to-kernel_cra_write>),           //              .write
		.kernel_cra_read            (<connected-to-kernel_cra_read>),            //              .read
		.kernel_cra_byteenable      (<connected-to-kernel_cra_byteenable>),      //              .byteenable
		.kernel_cra_debugaccess     (<connected-to-kernel_cra_debugaccess>),     //              .debugaccess
		.kernel_irq_irq             (<connected-to-kernel_irq_irq>),             //    kernel_irq.irq
		.kernel_reset_reset_n       (<connected-to-kernel_reset_reset_n>),       //  kernel_reset.reset_n
		.psl_clk_clk                (<connected-to-psl_clk_clk>),                //       psl_clk.clk
		.kernel_clk_in_clk          (<connected-to-kernel_clk_in_clk>)           // kernel_clk_in.clk
	);

